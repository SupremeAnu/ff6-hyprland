#!/bin/bash

# Fix Window Switching Script for FF6 Hyprland
# This script updates the Hyprland configuration to fix window switching functionality

# ANSI color codes
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}=========================================${NC}"
echo -e "${BLUE}  FF6 Hyprland Window Switching Fix     ${NC}"
echo -e "${BLUE}=========================================${NC}"
echo

# Config paths
CONFIG_DIR="$HOME/.config"
HYPR_DIR="$CONFIG_DIR/hypr"
KEYBINDS_CONF="$HYPR_DIR/keybinds.conf"

# Check if Hyprland config exists
if [ ! -d "$HYPR_DIR" ]; then
  echo -e "${RED}Hyprland configuration not found at $HYPR_DIR${NC}"
  echo -e "${YELLOW}Please run the installer first${NC}"
  exit 1
fi

# Create keybinds.conf if it doesn't exist
if [ ! -f "$KEYBINDS_CONF" ]; then
  echo -e "${YELLOW}Creating keybinds.conf...${NC}"
  touch "$KEYBINDS_CONF"
fi

# Backup existing keybinds.conf
echo -e "${BLUE}Backing up existing keybinds.conf...${NC}"
cp "$KEYBINDS_CONF" "$KEYBINDS_CONF.bak"
echo -e "${GREEN}✓ Backed up to $KEYBINDS_CONF.bak${NC}"

# Update keybinds.conf with window switching keybindings
echo -e "${BLUE}Updating keybinds.conf with window switching keybindings...${NC}"

cat > "$KEYBINDS_CONF" << 'EOF'
# FF6 Hyprland Keybindings Configuration
# Generated by fix-window-switching.sh

# Variables
$mainMod = SUPER
$terminal = kitty
$fileManager = thunar
$browser = firefox
$menu = rofi -show drun
$screenshot = grim -g "$(slurp)" - | swappy -f -
$fullScreenshot = grim - | swappy -f -
$windowScreenshot = grim -g "$(hyprctl activewindow -j | jq -r '.at[0], " ", .at[1], " ", .size[0], " ", .size[1]' | awk '{print $1+$3, $2+$4}')" - | swappy -f -
$clipboardHistory = cliphist list | rofi -dmenu | cliphist decode | wl-copy
$helpMenu = $HOME/.config/hypr/scripts/keybindings-help.sh

# General Keybindings
bind = $mainMod, Return, exec, $terminal
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, D, exec, $menu
bind = $mainMod, Q, killactive, 
bind = $mainMod, F, fullscreen, 
bind = $mainMod, Space, togglefloating, 
bind = $mainMod, P, exec, $HOME/.config/rofi/scripts/powermenu.sh
bind = $mainMod, H, exec, $helpMenu

# Window Navigation
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Window Movement
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# Window Resizing
bind = $mainMod CTRL, left, resizeactive, -20 0
bind = $mainMod CTRL, right, resizeactive, 20 0
bind = $mainMod CTRL, up, resizeactive, 0 -20
bind = $mainMod CTRL, down, resizeactive, 0 20

# Workspace Switching
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move Window to Workspace
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Cycle Through Workspaces
bind = $mainMod, Tab, workspace, e+1
bind = $mainMod SHIFT, Tab, workspace, e-1

# Cycle Through Windows
bind = ALT, Tab, cyclenext
bind = ALT SHIFT, Tab, cyclenext, prev

# Mouse Bindings
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Screenshot Bindings
bind = , Print, exec, $fullScreenshot
bind = $mainMod, Print, exec, $screenshot
bind = ALT, Print, exec, $windowScreenshot
bind = CTRL, Print, exec, grim - | wl-copy

# Clipboard History
bind = $mainMod, V, exec, $clipboardHistory

# Media Controls
bind = , XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%
bind = , XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
bind = , XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous

# FF6 Theme Controls
bind = $mainMod SHIFT, W, exec, $HOME/.config/hypr/scripts/wallpaper-random.sh
bind = $mainMod SHIFT, T, exec, $HOME/.config/hypr/scripts/toggle-theme.sh
bind = $mainMod SHIFT, S, exec, $HOME/.config/hypr/scripts/toggle-sounds.sh
EOF

echo -e "${GREEN}✓ Updated keybinds.conf with window switching keybindings${NC}"

# Update hyprland.conf to include keybinds.conf
HYPRLAND_CONF="$HYPR_DIR/hyprland.conf"

if [ ! -f "$HYPRLAND_CONF" ]; then
  echo -e "${RED}Hyprland configuration file not found at $HYPRLAND_CONF${NC}"
  exit 1
fi

# Check if keybinds.conf is already sourced
if grep -q "source = ./keybinds.conf" "$HYPRLAND_CONF"; then
  echo -e "${BLUE}keybinds.conf is already sourced in hyprland.conf${NC}"
else
  # Add source line after the last source line or at the beginning of the file
  if grep -q "^source =" "$HYPRLAND_CONF"; then
    sed -i '/^source =/a source = ./keybinds.conf' "$HYPRLAND_CONF"
  else
    sed -i '1s/^/source = ./keybinds.conf\n\n/' "$HYPRLAND_CONF"
  fi
  echo -e "${GREEN}✓ Added keybinds.conf to hyprland.conf${NC}"
fi

# Create toggle-theme.sh script
TOGGLE_THEME_SCRIPT="$HYPR_DIR/scripts/toggle-theme.sh"
mkdir -p "$HYPR_DIR/scripts"

echo -e "${BLUE}Creating toggle-theme.sh script...${NC}"

cat > "$TOGGLE_THEME_SCRIPT" << 'EOF'
#!/bin/bash

# FF6 Hyprland Theme Toggle Script
# This script toggles between light and dark themes

THEME_FILE="$HOME/.config/hypr/theme.conf"

if [ ! -f "$THEME_FILE" ]; then
  echo "dark" > "$THEME_FILE"
fi

CURRENT_THEME=$(cat "$THEME_FILE")

if [ "$CURRENT_THEME" = "dark" ]; then
  # Switch to light theme
  sed -i 's/dark/light/' "$THEME_FILE"
  hyprctl keyword general:col.active_border "rgba(FFFFFFFF)"
  hyprctl keyword general:col.inactive_border "rgba(AABBFFAA)"
  notify-send "Theme Switched" "Light theme activated" -i "$HOME/.config/hypr/icons/settings.png"
else
  # Switch to dark theme
  sed -i 's/light/dark/' "$THEME_FILE"
  hyprctl keyword general:col.active_border "rgba(FFFFFFFF)"
  hyprctl keyword general:col.inactive_border "rgba(102080AA)"
  notify-send "Theme Switched" "Dark theme activated" -i "$HOME/.config/hypr/icons/settings.png"
fi
EOF

chmod +x "$TOGGLE_THEME_SCRIPT"
echo -e "${GREEN}✓ Created toggle-theme.sh script${NC}"

# Create toggle-sounds.sh script
TOGGLE_SOUNDS_SCRIPT="$HYPR_DIR/scripts/toggle-sounds.sh"

echo -e "${BLUE}Creating toggle-sounds.sh script...${NC}"

cat > "$TOGGLE_SOUNDS_SCRIPT" << 'EOF'
#!/bin/bash

# FF6 Hyprland Sound Toggle Script
# This script toggles system sound effects

SOUND_FILE="$HOME/.config/hypr/sounds.conf"

if [ ! -f "$SOUND_FILE" ]; then
  echo "on" > "$SOUND_FILE"
fi

CURRENT_SOUND=$(cat "$SOUND_FILE")

if [ "$CURRENT_SOUND" = "on" ]; then
  # Turn sounds off
  sed -i 's/on/off/' "$SOUND_FILE"
  notify-send "Sounds Disabled" "FF6 sound effects turned off" -i "$HOME/.config/hypr/icons/settings.png"
else
  # Turn sounds on
  sed -i 's/off/on/' "$SOUND_FILE"
  notify-send "Sounds Enabled" "FF6 sound effects turned on" -i "$HOME/.config/hypr/icons/settings.png"
  # Play a sound to confirm
  if [ -f "$HOME/.config/hypr/sounds/confirm.wav" ]; then
    paplay "$HOME/.config/hypr/sounds/confirm.wav"
  fi
fi
EOF

chmod +x "$TOGGLE_SOUNDS_SCRIPT"
echo -e "${GREEN}✓ Created toggle-sounds.sh script${NC}"

echo -e "${BLUE}=========================================${NC}"
echo -e "${GREEN}  Window Switching Fix Complete!        ${NC}"
echo -e "${BLUE}=========================================${NC}"
echo -e "${YELLOW}Please restart Hyprland to apply the changes.${NC}"
echo -e "${YELLOW}You can do this by logging out and back in, or by running:${NC}"
echo -e "${BLUE}hyprctl dispatch exit${NC}"
